import telebot
from telebot import types


jobs = {'systemAdmin': '–°–∏—Å. –∞–¥–º–∏–Ω', 'cleaner': '–£–±–æ—Ä—â–∏–∫', 'machineOperator': '–°—Ç–∞–Ω–æ—á–Ω–∏–∫',
        'storekeeper': '–ö–ª–∞–¥–æ–≤—â–∏–∫', 'director': '–î–∏—Ä–µ–∫—Ç–æ—Ä', 'electrician': '–≠–ª–µ–∫—Ç—Ä–∏–∫', 'plumber': '–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫',
        'security': '–û—Ö—Ä–∞–Ω–Ω–∏–∫', 'canteen': '–°–æ—Ç—Ä—É–¥–Ω–∏–∫ –±—É—Ñ–µ—Ç–∞', 'qualityControl': '–ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞',
        'uchetchik': '–£—á–µ—Ç—á–∏–∫', 'standardizer': '–ù–æ—Ä–º–∏—Ä–æ–≤—â–∏–∫', 'designEngineer': '–ò–Ω–∂–µ–Ω–µ—Ä-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä',
        'processEngineer': '–ò–Ω–∂–µ–Ω–µ—Ä-—Ç–µ—Ö–Ω–æ–ª–æ–≥', 'accountant': '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä', '–õ–∏—Ñ—Ç–µ—Ä': 'elevatorOperator',
        '–ó–∞–≤—Ö–æ–∑': 'supplyManager', 'other': '–î—Ä—É–≥–æ–µ'}

markup_choose = types.InlineKeyboardMarkup(row_width=3)
# for i in jobs:
#     markup_choose.add(types.InlineKeyboardButton(jobs[i], callback_data=i + '_job'))
markup_choose.add(types.InlineKeyboardButton('–°–∏—Å. –∞–¥–º–∏–Ω', callback_data='systemAdmin_job'),
                  types.InlineKeyboardButton('–£–±–æ—Ä—â–∏–∫', callback_data='cleaner_job'),
                  types.InlineKeyboardButton('–°—Ç–∞–Ω–æ—á–Ω–∏–∫', callback_data='machineOperator_job'),
                  types.InlineKeyboardButton('–ö–ª–∞–¥–æ–≤—â–∏–∫', callback_data='storekeeper_job'),
                  types.InlineKeyboardButton('–î–∏—Ä–µ–∫—Ç–æ—Ä', callback_data='director_job'),
                  types.InlineKeyboardButton('–≠–ª–µ–∫—Ç—Ä–∏–∫', callback_data='electrician_job'),
                  types.InlineKeyboardButton('–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫', callback_data='plumber_job'),
                  types.InlineKeyboardButton('–û—Ö—Ä–∞–Ω–Ω–∏–∫', callback_data='security_job'),
                  types.InlineKeyboardButton('–°–æ—Ç—Ä—É–¥–Ω–∏–∫ –±—É—Ñ–µ—Ç–∞', callback_data='canteen_job'),
                  types.InlineKeyboardButton('–ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞', callback_data='qualityControl_job'),
                  types.InlineKeyboardButton('–£—á–µ—Ç—á–∏–∫', callback_data='uchetchik_job'),
                  types.InlineKeyboardButton('–ù–æ—Ä–º–∏—Ä–æ–≤—â–∏–∫', callback_data='standardizer_job'),
                  types.InlineKeyboardButton('–ò–Ω–∂–µ–Ω–µ—Ä-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä', callback_data='designEngineer_job'),
                  types.InlineKeyboardButton('–ò–Ω–∂–µ–Ω–µ—Ä-—Ç–µ—Ö–Ω–æ–ª–æ–≥', callback_data='processEngineer_job'),
                  types.InlineKeyboardButton('–ë—É—Ö–≥–∞–ª—Ç–µ—Ä', callback_data='accountant_job'),
                  types.InlineKeyboardButton('–õ–∏—Ñ—Ç–µ—Ä', callback_data='elevatorOperator_job'),
                  types.InlineKeyboardButton('–ó–∞–≤—Ö–æ–∑', callback_data='supplyManager_job'),
                  types.InlineKeyboardButton('–î—Ä—É–≥–æ–µ', callback_data='other_job'))

markup_make_question = types.InlineKeyboardMarkup(row_width=3)
# for i in jobs:
#     markup_make_question.add(types.InlineKeyboardButton(jobs[i], callback_data=i + '_question'))
markup_make_question.add(types.InlineKeyboardButton('–°–∏—Å. –∞–¥–º–∏–Ω', callback_data='systemAdmin_question'),
                         types.InlineKeyboardButton('–£–±–æ—Ä—â–∏–∫', callback_data='cleaner_question'),
                         types.InlineKeyboardButton('–°—Ç–∞–Ω–æ—á–Ω–∏–∫', callback_data='machineOperator_question'),
                         types.InlineKeyboardButton('–ö–ª–∞–¥–æ–≤—â–∏–∫', callback_data='storekeeper_question'),
                         types.InlineKeyboardButton('–î–∏—Ä–µ–∫—Ç–æ—Ä', callback_data='director_question'),
                         types.InlineKeyboardButton('–≠–ª–µ–∫—Ç—Ä–∏–∫', callback_data='electrician_question'),
                         types.InlineKeyboardButton('–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫', callback_data='plumber_question'),
                         types.InlineKeyboardButton('–û—Ö—Ä–∞–Ω–Ω–∏–∫', callback_data='security_question'),
                         types.InlineKeyboardButton('–°–æ—Ç—Ä—É–¥–Ω–∏–∫ –±—É—Ñ–µ—Ç–∞', callback_data='canteen_question'),
                         types.InlineKeyboardButton('–ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞', callback_data='qualityControl_question'),
                         types.InlineKeyboardButton('–£—á–µ—Ç—á–∏–∫', callback_data='uchetchik_question'),
                         types.InlineKeyboardButton('–ù–æ—Ä–º–∏—Ä–æ–≤—â–∏–∫', callback_data='standardizer_question'),
                         types.InlineKeyboardButton('–ò–Ω–∂–µ–Ω–µ—Ä-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä', callback_data='designEngineer_question'),
                         types.InlineKeyboardButton('–ò–Ω–∂–µ–Ω–µ—Ä-—Ç–µ—Ö–Ω–æ–ª–æ–≥', callback_data='processEngineer_question'),
                         types.InlineKeyboardButton('–ë—É—Ö–≥–∞–ª—Ç–µ—Ä', callback_data='accountant_question'),
                         types.InlineKeyboardButton('–õ–∏—Ñ—Ç–µ—Ä', callback_data='elevatorOperator_question'),
                         types.InlineKeyboardButton('–ó–∞–≤—Ö–æ–∑', callback_data='supplyManager_question'),
                         types.InlineKeyboardButton('–î—Ä—É–≥–æ–µ', callback_data='other_question')
                         )

markup_main = types.InlineKeyboardMarkup(row_width=2)
markup_main.add(types.InlineKeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø—Ä–æ—Å—ã', callback_data='questions'),
                types.InlineKeyboardButton('–°–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å', callback_data='make_question'),
                types.InlineKeyboardButton('–°—Ç–∏–∫–µ—Ä—ã', callback_data='stickers'),
                types.InlineKeyboardButton('–û–±—É—á–µ–Ω–∏–µ', callback_data='learn'))

markup_main_director = types.InlineKeyboardMarkup(row_width=2)
markup_main_director.add(types.InlineKeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø—Ä–æ—Å—ã', callback_data='questions'),
                         types.InlineKeyboardButton('–°–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å', callback_data='make_question'),
                         types.InlineKeyboardButton('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data='stats'),
                         types.InlineKeyboardButton('–°—Ç–∏–∫–µ—Ä—ã', callback_data='stickers'),
                         types.InlineKeyboardButton('–û–±—É—á–µ–Ω–∏–µ', callback_data='learn'))

markup_question = types.InlineKeyboardMarkup(row_width=2)
markup_question.add(types.InlineKeyboardButton('–ó–∞–ø—Ä–æ—Å—ã –¥–ª—è –º–µ–Ω—è', callback_data='my_questions'),
                    types.InlineKeyboardButton('–í—Å–µ –∑–∞–ø—Ä–æ—Å—ã', callback_data='all_questions'))

markup_to_main = types.InlineKeyboardMarkup(row_width=1)
markup_to_main.add(types.InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='main_menu'))

markup_is_completed = types.InlineKeyboardMarkup(row_width=1)
markup_is_completed.add(types.InlineKeyboardButton('–†–µ—à–µ–Ω–æ', callback_data='completed'))

markup_level = types.InlineKeyboardMarkup(row_width=1)
markup_level.add(types.InlineKeyboardButton('üü¢–ú–æ–∂–µ—Ç –ø–æ–¥–æ–∂–¥–∞—Ç—åüü¢', callback_data='1_level'),
                 types.InlineKeyboardButton('üü°–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µüü°', callback_data='2_level'),
                 types.InlineKeyboardButton('üî¥–°–†–û–ß–ù–û –∏—Å–ø—Ä–∞–≤–∏—Ç—å!üî¥', callback_data='3_level'))

markup_stats = types.InlineKeyboardMarkup(row_width=1)
markup_stats.add(types.InlineKeyboardButton('–°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª-–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –≤ –¥–µ–Ω—å', callback_data='avg_add_day'),
                 types.InlineKeyboardButton('–°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª-–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –≤ –¥–µ–Ω—å', callback_data='avg_cmplt_day'),
                 types.InlineKeyboardButton('–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á', callback_data='avg_evaluation'),
                 types.InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='main_menu'))

markup_back_stats = types.InlineKeyboardMarkup(row_width=1)
markup_back_stats.add(types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='stats'))

markup_retry_director = types.InlineKeyboardMarkup(row_width=1)
markup_retry_director.add(types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='login'),
                          types.InlineKeyboardButton('–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞', callback_data='director_job'))

markup_new_task = types.InlineKeyboardMarkup(row_width=1)
markup_new_task.add(types.InlineKeyboardButton('–†–µ—à–µ–Ω–æ', callback_data='completed'),
                    types.InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='main_menu'))

markup_task_performance_evaluation = types.InlineKeyboardMarkup(row_width=5)
markup_task_performance_evaluation.add(types.InlineKeyboardButton('1', callback_data='1_performance'),
                                       types.InlineKeyboardButton('2', callback_data='2_performance'),
                                       types.InlineKeyboardButton('3', callback_data='3_performance'),
                                       types.InlineKeyboardButton('4', callback_data='4_performance'),
                                       types.InlineKeyboardButton('5', callback_data='5_performance'))

markup_back_to_main = types.InlineKeyboardMarkup(row_width=1)
markup_back_to_main.add(types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='main_menu'))

markup_learn = types.InlineKeyboardMarkup(row_width=1)
markup_learn.add(types.InlineKeyboardButton('–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å –≤—Ä—É—á–Ω—É—é', callback_data='2_learn'),
                 types.InlineKeyboardButton('–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å —Å –ø–æ–º–æ—â—å—é —Å—Ç–∏–∫–µ—Ä–∞', callback_data='3_learn'),
                 types.InlineKeyboardButton('–ö–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É', callback_data='4_learn'),
                 types.InlineKeyboardButton('–ö–∞–∫ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –∑–∞–ø—Ä–æ—Å', callback_data='1_learn'),
                 types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='main_menu'))

markup_back_learn = types.InlineKeyboardMarkup(row_width=1)
markup_back_learn.add(types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='learn'))